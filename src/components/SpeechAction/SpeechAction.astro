---
import { PlayCircle, Repeat, StopCircle } from "@lucide/astro";
const { audio } = Astro.props;
---

<div
  class="flex flex-row items-start text-left gap-4 w-full"
  data-audio={audio}
  id="audio-guide"
>
  <button
    class="bg-amber-500 hover:bg-amber-600 text-white p-2 rounded-md text-base font-medium transition-colors flex items-center justify-center cursor-pointer"
    data-action="repeat"
  >
    <Repeat class="h-8 w-8" />
  </button>

  <button
    class="bg-amber-500 hover:bg-amber-600 text-white p-2 rounded-md text-base font-medium transition-colors flex items-center justify-center cursor-pointer"
    aria-label="Reproducir audioguÃ­a"
    data-action="play"
  >
    <PlayCircle class="h-8 w-8" />
  </button>
  <button
    class="bg-amber-500 hover:bg-amber-600 text-white p-2 rounded-md text-base font-medium transition-colors flex items-center justify-center cursor-pointer"
    data-action="stop"
  >
    <StopCircle class="h-8 w-8" />
  </button>
</div>

<script>
  const synth = window.speechSynthesis;
  // const text = ``;
  const text = document
    .querySelector("#audio-guide")!
    .getAttribute("data-audio");
  const utterance = new SpeechSynthesisUtterance(text!);
  utterance.lang = "es-ES"; // Set the language to Spanish
  utterance.rate = 1; // Set the speech rate (1 is normal speed)
  utterance.pitch = 1; // Set the pitch (1 is normal pitch)
  utterance.volume = 1; // Set the volume (0 to 1)

  function stopAudio() {
    if (synth.speaking) {
      synth.cancel(); // Stop the speech synthesis
      console.log("Audio stopped");
    } else {
      console.log("No audio is playing to stop");
    }
  }
  document
    .querySelector('button[data-action="stop"]')!
    .addEventListener("click", stopAudio);

  function playAudio() {
    // Check if the audio is playing
    if (synth.speaking) {
      console.log("Audio is playing");
    } else {
      console.log("Audio is not playing");
      synth.speak(utterance);

    }
    // Return a message or perform any other action if needed
    // For example, you can return a message to indicate that the audio is playing
    // return "Audio is playing";
    return "";
  }

  document
    .querySelector('button[data-action="play"]')!
    .addEventListener("click", playAudio);

  function repeatAudio() {
    stopAudio(); // Stop any currently playing audio
    playAudio(); // Play the audio again
  }
  document
    .querySelector('button[data-action="repeat"]')!
    .addEventListener("click", repeatAudio);
</script>
